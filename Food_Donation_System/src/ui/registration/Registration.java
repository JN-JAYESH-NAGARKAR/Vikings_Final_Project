/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.registration;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.RestaurantAdminRole;
import Business.Utils.Validation;
import Business.WorkQueue.RegistrationRequest;
import Business.WorkQueue.WorkQueue;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Jayesh Nagarkar
 */
public class Registration extends javax.swing.JPanel {

    /**
     * Creates new form registrationJPanel
     */
    JPanel container;
    EcoSystem system;
    private boolean emailValid;
    private boolean contactValid;
    private boolean userUnique;
    public Registration(JPanel container,EcoSystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        populateNetworkComboBox();
        
        
        usernameExistsMessage.setVisible(false);
        contactValidateMessage.setVisible(false);
        emailSuccessLabel1.setVisible(false);
        emailSuccessLabel1.setVisible(false);
        userNameSuccessLabel.setVisible(false);
        emailValidateMessage1.setVisible(false);
        populateOrgTypes();
    }
    public void populateNetworkComboBox() {
        stateCombo.removeAllItems();
        for (Network network : system.getNetworkList()) {
            stateCombo.addItem(network);
        }
    }
    public void populateOrgTypes() {
        orgCombo.addItem(Organization.Type.Restaurant);
        orgCombo.addItem(Organization.Type.IndividualDonator);
        orgCombo.addItem(Organization.Type.PartyOrganizer);
        orgCombo.addItem(Organization.Type.IndividualReceiver);
        orgCombo.addItem(Organization.Type.Orphanage);
        orgCombo.addItem(Organization.Type.Oldage);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userName2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        uName = new javax.swing.JTextField();
        uPass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        uEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        uAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        uContact = new javax.swing.JTextField();
        stateCombo = new javax.swing.JComboBox();
        orgCombo = new javax.swing.JComboBox();
        btnRegister = new javax.swing.JButton();
        usernameExistsMessage = new javax.swing.JLabel();
        contactValidateMessage = new javax.swing.JLabel();
        userNameSuccessLabel = new javax.swing.JLabel();
        emailSuccessLabel1 = new javax.swing.JLabel();
        emailValidateMessage1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(25, 56, 82));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Organization User Registratioin");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(25, 56, 82));
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, -1, -1));

        userName2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        userName2.setForeground(new java.awt.Color(25, 56, 82));
        userName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userName2ActionPerformed(evt);
            }
        });
        userName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userName2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userName2KeyTyped(evt);
            }
        });
        add(userName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 250, 35));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(25, 56, 82));
        jLabel3.setText("Username");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, -1, -1));

        uName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uName.setForeground(new java.awt.Color(25, 56, 82));
        uName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uNameKeyTyped(evt);
            }
        });
        add(uName, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 250, 35));

        uPass.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uPass.setForeground(new java.awt.Color(25, 56, 82));
        uPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uPassKeyTyped(evt);
            }
        });
        add(uPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, 253, 35));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(25, 56, 82));
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 62, 20));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(25, 56, 82));
        jLabel5.setText("Email Id");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, -1, 20));

        uEmail.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uEmail.setForeground(new java.awt.Color(25, 56, 82));
        uEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uEmailKeyTyped(evt);
            }
        });
        add(uEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 250, 35));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("Network");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 370, -1, 20));

        uAddress.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uAddress.setForeground(new java.awt.Color(25, 56, 82));
        uAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uAddressKeyTyped(evt);
            }
        });
        add(uAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 250, 35));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(25, 56, 82));
        jLabel7.setText("Address");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 420, -1, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(25, 56, 82));
        jLabel8.setText("Organization");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, -1, 20));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(25, 56, 82));
        jLabel9.setText("Contact");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 530, -1, 30));

        uContact.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uContact.setForeground(new java.awt.Color(25, 56, 82));
        uContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uContactActionPerformed(evt);
            }
        });
        uContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uContactKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uContactKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uContactKeyTyped(evt);
            }
        });
        add(uContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 520, 250, 35));

        stateCombo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        stateCombo.setForeground(new java.awt.Color(25, 56, 82));
        stateCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateComboItemStateChanged(evt);
            }
        });
        stateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboActionPerformed(evt);
            }
        });
        add(stateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, 250, 35));

        orgCombo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        orgCombo.setForeground(new java.awt.Color(25, 56, 82));
        orgCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                orgComboKeyTyped(evt);
            }
        });
        add(orgCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 460, 250, 35));

        btnRegister.setBackground(new java.awt.Color(255, 255, 255));
        btnRegister.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(25, 56, 82));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 580, -1, -1));

        usernameExistsMessage.setForeground(new java.awt.Color(255, 0, 0));
        usernameExistsMessage.setText("Username already exists");
        add(usernameExistsMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 210, -1, -1));

        contactValidateMessage.setForeground(new java.awt.Color(255, 0, 0));
        contactValidateMessage.setText("contact is invalid");
        add(contactValidateMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, -1, -1));

        userNameSuccessLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tick1.4.gif"))); // NOI18N
        add(userNameSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 210, -1, -1));

        emailSuccessLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tick1.4.gif"))); // NOI18N
        add(emailSuccessLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 310, -1, -1));

        emailValidateMessage1.setForeground(new java.awt.Color(255, 0, 0));
        emailValidateMessage1.setText("Email format incorrect");
        add(emailValidateMessage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 320, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void userName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userName2ActionPerformed

    private void userName2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userName2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userName2KeyPressed

    private void userName2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userName2KeyTyped
        // TODO add your handling code here:
        userName2.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        userName2.setForeground(Color.BLACK);
    }//GEN-LAST:event_userName2KeyTyped

    private void uNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uNameKeyReleased
        // TODO add your handling code here:
        if (!system.checkIfUserIsUnique(uName.getText()) ) {
            
            userNameSuccessLabel.setVisible(false);
            usernameExistsMessage.setVisible(true);
            userUnique = false;
        } else {
            uName.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            uName.setForeground(Color.BLACK);
            usernameExistsMessage.setVisible(false);
            userNameSuccessLabel.setVisible(true);
            userUnique = true;
            int delay = 2500000; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    userNameSuccessLabel.setVisible(false);
                }
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }//GEN-LAST:event_uNameKeyReleased

    private void uNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_uNameKeyTyped

    private void uPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uPassKeyTyped
        // TODO add your handling code here:
        uPass.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uPass.setForeground(Color.BLACK);
    }//GEN-LAST:event_uPassKeyTyped

    private void uEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uEmailKeyTyped
        // TODO add your handling code here:
        if (!Validation.emailValidator(uEmail.getText())) {
            emailValidateMessage1.setVisible(true);
            emailSuccessLabel1.setVisible(false);
            emailValid = false;
        } else {
            
            uEmail.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            uEmail.setForeground(Color.BLACK);
            emailValidateMessage1.setVisible(false);
            emailSuccessLabel1.setVisible(true);
            emailValid = true;
            int delay = 2000; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    emailSuccessLabel1.setVisible(true);
                }
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }//GEN-LAST:event_uEmailKeyTyped

    private void uAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uAddressKeyTyped
        // TODO add your handling code here:
        uAddress.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uAddress.setForeground(Color.BLACK);
    }//GEN-LAST:event_uAddressKeyTyped

    private void uContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uContactActionPerformed

    private void uContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyTyped
        // TODO add your handling code here:
        if (!Validation.phoneNumberValidator(uContact.getText())) {
            contactValidateMessage.setVisible(true);
            
        } 
        else{
            contactValidateMessage.setVisible(false);
        }
        
    }//GEN-LAST:event_uContactKeyTyped

    private void uContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_uContactKeyPressed

    private void uContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyReleased
//        // TODO add your handling code here:
//               ;
//                       
//                    }
    }//GEN-LAST:event_uContactKeyReleased

    private void stateComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateComboItemStateChanged
        // TODO add your handling code here:
        stateCombo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        stateCombo.setForeground(Color.BLACK);
    }//GEN-LAST:event_stateComboItemStateChanged

    private void stateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboActionPerformed
        //
    }//GEN-LAST:event_stateComboActionPerformed

    private void orgComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgComboKeyTyped
        // TODO add your handling code here:
//        orgCombo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
//        orgCombo.setForeground(Color.BLACK);
    }//GEN-LAST:event_orgComboKeyTyped

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        Network network = (Network) stateCombo.getSelectedItem();
        Organization.Type type = (Organization.Type) orgCombo.getSelectedItem();

        if (network == null) {
            stateCombo.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            stateCombo.setForeground(Color.red);

        }
        if (uName.getText().isEmpty()) {
            uName.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            uName.setForeground(Color.red);

        }
        if (userName2.getText().isEmpty()) {
            userName2.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            userName2.setForeground(Color.red);

        }
        if (uPass.getText().isEmpty()) {
            uPass.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            uPass.setForeground(Color.red);

        }
        if (uEmail.getText().isEmpty()) {
            uEmail.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            uEmail.setForeground(Color.red);

        }
        if (uAddress.getText().isEmpty()) {
            uAddress.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            uAddress.setForeground(Color.red);

        }
        if (type == null) {
            orgCombo.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            orgCombo.setForeground(Color.red);

        }
        if (uContact.getText().isEmpty()) {
            uContact.setBorder(BorderFactory.createLineBorder(Color.YELLOW));
            uContact.setForeground(Color.red);

        }
        
        if (userName2.getText().isEmpty()
            || uPass.getText().isEmpty()
            || uEmail.getText().isEmpty()
            || uAddress.getText().isEmpty()
            || type == null
            || uContact.getText().isEmpty()
              ) {
            JOptionPane.showMessageDialog(null, "Enter all fields");
        } else if(!Validation.phoneNumberValidator(uContact.getText())){
            JOptionPane.showMessageDialog(null, "Phone format incorrect");
        }
        else if (emailValid && userUnique) {
            RegistrationRequest registrationRequest = new RegistrationRequest();
            registrationRequest.setName(userName2.getText());
            registrationRequest.setUserName(uName.getText());
            registrationRequest.setPassword(uPass.getText());
            registrationRequest.setEmilId(uEmail.getText());
            registrationRequest.setNetwork(network);
            registrationRequest.setAddress(uAddress.getText());
            registrationRequest.setType(type);
            registrationRequest.setStatus("Requested");
            registrationRequest.setStatus(uContact.getText());
            
            String contact = "";

            
           
           
            for (Network network1 : system.getNetworkList()) {
                for (Enterprise enterprise : network1.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.FoodDonation) {
                        Organization org = enterprise.getOrganizationDirectory().createOrganization(Organization.Type.Restaurant, "Boston New Restaurant",uAddress.getText());
                        org.getUserAccountDirectory()
                                .createUserAccount(userName2.getText(),uPass.getText(), new Employee(),
                                        new RestaurantAdminRole());
                        org.getUserAccountDirectory().createUserAccount(uName.getText(), uPass.getText(),
                                new Employee(), new RestaurantAdminRole());
                        
                    }
                }
            }
            
            
            
            
            JOptionPane.showMessageDialog(null, "You have been registered succesfully!");
            uName.setText("");
            userName2.setText("");
            uPass.setText("");
            uEmail.setText("");
            uAddress.setText("");
            uContact.setText("");
            
        } else if (!emailValid || !contactValid || !userUnique) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
        }
    }//GEN-LAST:event_btnRegisterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel contactValidateMessage;
    private javax.swing.JLabel emailSuccessLabel1;
    private javax.swing.JLabel emailValidateMessage1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox orgCombo;
    private javax.swing.JComboBox stateCombo;
    private javax.swing.JTextField uAddress;
    private javax.swing.JTextField uContact;
    private javax.swing.JTextField uEmail;
    private javax.swing.JTextField uName;
    private javax.swing.JTextField uPass;
    private javax.swing.JTextField userName2;
    private javax.swing.JLabel userNameSuccessLabel;
    private javax.swing.JLabel usernameExistsMessage;
    // End of variables declaration//GEN-END:variables
}
