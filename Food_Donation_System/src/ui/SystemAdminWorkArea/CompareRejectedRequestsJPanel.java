package ui.SystemAdminWorkArea;


import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.OldAgeOrganization;
import Business.Organization.Organization;
import Business.Organization.OrphanageOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jayesh Nagarkar
 */
public class CompareRejectedRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CompareRejectedRequestsJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    JFreeChart barChart;
    HashMap<String, Integer> mapBoston = new HashMap<String, Integer>();
    HashMap<String, Integer> mapNewYork = new HashMap<String, Integer>();
    
    public CompareRejectedRequestsJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populatePieGraph();
    }
    public void populatePieGraph(){
        ArrayList<WorkRequest> workReqList = new ArrayList<>();
        ArrayList<WorkRequest> rejectedWorkRequest = new ArrayList<>();
        
        Map<String, Integer> workReqMap = new HashMap<>();
       
        for(Network network:system.getNetworkList()) {

            for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()) {
                
                for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()) {
                    
                   
                if( organization instanceof OldAgeOrganization || organization instanceof
                            OrphanageOrganization){
                    for (WorkRequest wr : organization.getWorkQueue().getWorkRequestList()){
                        
                        if (wr instanceof WorkRequest) {
                             if(wr.getStatus() == null) continue;
                            if(wr.getStatus().equals("Rejected")){
                                rejectedWorkRequest.add(wr);
                            }
                            workReqList.add(wr);
                        }
                    }
                }  
                    
            }
        }
            
            
            workReqMap.put(network.getName(), workReqList.size());//boston+requested boston+rejected  newyork+requested,,,
            workReqMap.put(network.getName()+" Rejected WorkRequest",rejectedWorkRequest.size());
            System.out.println(network.getName()+" Rejected WorkRequest"+rejectedWorkRequest.size());
            rejectedWorkRequest.clear();
            workReqList.clear();
            System.out.println("compare reject request line number 82");
        }
      
        barChart = ChartFactory.createPieChart(
         "Compare Rejected Food Requests across Networks",                     
         createDataset(workReqMap),          
         true, true, false);
         
        ChartPanel chartPanel = new ChartPanel( barChart );   
        jPanel1.removeAll();
        jPanel1.add(chartPanel, BorderLayout.CENTER);
        jPanel1.validate();

    }
    
    private PieDataset createDataset(Map<String, Integer> workReqMap) {
       
        final DefaultPieDataset dataset = new DefaultPieDataset();  

        for(String r : workReqMap.keySet()) {
            dataset.setValue(r, workReqMap.get(r));
        }             

        
        
        return dataset; 
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnDownloadGraph = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new java.awt.BorderLayout());
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 860, 600));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Note:Here in below Pie chart Request made by Old age and Orphange is counted.");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 594, -1));

        btnDownloadGraph.setBackground(new java.awt.Color(255, 255, 255));
        btnDownloadGraph.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnDownloadGraph.setForeground(new java.awt.Color(25, 56, 82));
        btnDownloadGraph.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDownloadGraph.setText("Download Graph");
        btnDownloadGraph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDownloadGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDownloadGraphMousePressed(evt);
            }
        });
        add(btnDownloadGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 138, 35));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(25, 56, 82));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Compare Made Request vs Rejected Requests");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 594, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDownloadGraphMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDownloadGraphMousePressed
        // TODO add your handling code here:
        try {
            int width = 640;    /* Width of the image */
            int height = 480;   /* Height of the image */
            File BarChart = new File( "BarChart.jpeg" );
            ChartUtilities.saveChartAsJPEG( BarChart , barChart , width , height );
            JOptionPane.showMessageDialog(null, "Graph has been donloaded in your current directory.");
        } catch (IOException ex) {
            Logger.getLogger(CompareRejectedRequestsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        };
    }//GEN-LAST:event_btnDownloadGraphMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDownloadGraph;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
